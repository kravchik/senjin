

//TODO
code gen for uniforms
code gen for buffers

all glsl functions

bvec
ivec
uvec
dvec

swizzles

StaticMethodCall for collect caller2callee
  and in Vec2f uv = Vec2f(v1, v2)

assert "no such method" (now it is null pointer, although IDEA stresses it too)
assert assignment vs copy
todo asserts for modification methods
todo asserts for in/out args in main
assert last statement is returns (count ifs with elses)
function overloading
logging
structures
classes
geometry shader
tessellation shader
compute shader
uniforms are common for both vertex and fragment, handle it some how
  check same type
  prevent somehow from filling from FS
  fs extends vs ?
  separate structure for uniforms ?

close SimpleWatch3D if shader didn't loaded
  or just don't spawn logs

Groovy don't detects wrong assignment
    o.gl_FragColor = foo2(sum);
    void foo2(Vec4f vv) {vv.w = 1}


//DONE
extension module for "float + Vec2f" like
real-time shaders reloading
asserts
  varyings, uniforms, vectors
functions
prefix for VS output (FS input) to avoid name clashing

