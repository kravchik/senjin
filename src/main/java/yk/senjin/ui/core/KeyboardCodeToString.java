package yk.senjin.ui.core;
import org.lwjgl.glfw.GLFW;
import yk.ycollections.YMap;

import static yk.ycollections.YHashMap.hm;

/**
 * Created with IntelliJ IDEA.
 * User: yuri
 * Date: 22/06/15
 * Time: 10:49
 */
public class KeyboardCodeToString {

    public static String getString(int keyCode) {
        if (!mapa.containsKey(keyCode)) return "unknown";
        //if (!mapa.containsKey(keyCode)) BadException.die("Can't find string for keycode " + keyCode);
        return mapa.get(keyCode);
    }

    //TODO enum
    public static YMap<Integer, String> mapa = hm(
            GLFW.GLFW_KEY_ESCAPE,              "ESCAPE",
            GLFW.GLFW_KEY_1,                   "1",
            GLFW.GLFW_KEY_2,                   "2",
            GLFW.GLFW_KEY_3,                   "3",
            GLFW.GLFW_KEY_4,                   "4",
            GLFW.GLFW_KEY_5,                   "5",
            GLFW.GLFW_KEY_6,                   "6",
            GLFW.GLFW_KEY_7,                   "7",
            GLFW.GLFW_KEY_8,                   "8",
            GLFW.GLFW_KEY_9,                   "9",
            GLFW.GLFW_KEY_0,                   "0",
            GLFW.GLFW_KEY_MINUS,               "MINUS",
            GLFW.GLFW_KEY_EQUAL,               "EQUAL",
            GLFW.GLFW_KEY_BACKSPACE,           "BACKSPACE",
            GLFW.GLFW_KEY_TAB,                 "TAB",
            GLFW.GLFW_KEY_Q,                   "Q",
            GLFW.GLFW_KEY_W,                   "W",
            GLFW.GLFW_KEY_E,                   "E",
            GLFW.GLFW_KEY_R,                   "R",
            GLFW.GLFW_KEY_T,                   "T",
            GLFW.GLFW_KEY_Y,                   "Y",
            GLFW.GLFW_KEY_U,                   "U",
            GLFW.GLFW_KEY_I,                   "I",
            GLFW.GLFW_KEY_O,                   "O",
            GLFW.GLFW_KEY_P,                   "P",
            GLFW.GLFW_KEY_LEFT_BRACKET,        "LEFT_BRACKET",
            GLFW.GLFW_KEY_RIGHT_BRACKET,       "RIGHT_BRACKET",
            GLFW.GLFW_KEY_ENTER,               "ENTER",
            GLFW.GLFW_KEY_LEFT_CONTROL,        "LEFT_CONTROL",
            GLFW.GLFW_KEY_A,                   "A",
            GLFW.GLFW_KEY_S,                   "S",
            GLFW.GLFW_KEY_D,                   "D",
            GLFW.GLFW_KEY_F,                   "F",
            GLFW.GLFW_KEY_G,                   "G",
            GLFW.GLFW_KEY_H,                   "H",
            GLFW.GLFW_KEY_J,                   "J",
            GLFW.GLFW_KEY_K,                   "K",
            GLFW.GLFW_KEY_L,                   "L",
            GLFW.GLFW_KEY_SEMICOLON,           "SEMICOLON",
            GLFW.GLFW_KEY_APOSTROPHE,          "APOSTROPHE",
            GLFW.GLFW_KEY_GRAVE_ACCENT,        "GRAVE_ACCENT",
            GLFW.GLFW_KEY_LEFT_SHIFT,          "LEFT_SHIFT",
            GLFW.GLFW_KEY_BACKSLASH,           "BACKSLASH",
            GLFW.GLFW_KEY_Z,                   "Z",
            GLFW.GLFW_KEY_X,                   "X",
            GLFW.GLFW_KEY_C,                   "C",
            GLFW.GLFW_KEY_V,                   "V",
            GLFW.GLFW_KEY_B,                   "B",
            GLFW.GLFW_KEY_N,                   "N",
            GLFW.GLFW_KEY_M,                   "M",
            GLFW.GLFW_KEY_COMMA,               "COMMA",
            GLFW.GLFW_KEY_PERIOD,              "PERIOD",
            GLFW.GLFW_KEY_SLASH,               "SLASH",
            GLFW.GLFW_KEY_RIGHT_SHIFT,         "RIGHT_SHIFT",
            GLFW.GLFW_KEY_KP_MULTIPLY,         "KP_MULTIPLY",
            //GLFW.GLFW_KEY_LMENU,               "LMENU",
            GLFW.GLFW_KEY_SPACE,               "SPACE",
            GLFW.GLFW_KEY_CAPS_LOCK,           "CAPS_LOCK",
            GLFW.GLFW_KEY_F1,                  "F1",
            GLFW.GLFW_KEY_F2,                  "F2",
            GLFW.GLFW_KEY_F3,                  "F3",
            GLFW.GLFW_KEY_F4,                  "F4",
            GLFW.GLFW_KEY_F5,                  "F5",
            GLFW.GLFW_KEY_F6,                  "F6",
            GLFW.GLFW_KEY_F7,                  "F7",
            GLFW.GLFW_KEY_F8,                  "F8",
            GLFW.GLFW_KEY_F9,                  "F9",
            GLFW.GLFW_KEY_F10,                 "F10",
            GLFW.GLFW_KEY_NUM_LOCK,            "NUM_LOCK",
            GLFW.GLFW_KEY_SCROLL_LOCK,         "SCROLL_LOCK",
            GLFW.GLFW_KEY_KP_7,                "KP_7",
            GLFW.GLFW_KEY_KP_8,                "KP_8",
            GLFW.GLFW_KEY_KP_9,                "KP_9",
            GLFW.GLFW_KEY_KP_SUBTRACT,         "KP_SUBTRACT",
            GLFW.GLFW_KEY_KP_4,                "KP_4",
            GLFW.GLFW_KEY_KP_5,                "KP_5",
            GLFW.GLFW_KEY_KP_6,                "KP_6",
            GLFW.GLFW_KEY_KP_ADD,              "KP_ADD",
            GLFW.GLFW_KEY_KP_1,                "KP_1",
            GLFW.GLFW_KEY_KP_2,                "KP_2",
            GLFW.GLFW_KEY_KP_3,                "KP_3",
            GLFW.GLFW_KEY_KP_0,                "KP_0",
            GLFW.GLFW_KEY_KP_DECIMAL,          "KP_DECIMAL",
            GLFW.GLFW_KEY_F11,                 "F11",
            GLFW.GLFW_KEY_F12,                 "F12",
            GLFW.GLFW_KEY_F13,                 "F13",
            GLFW.GLFW_KEY_F14,                 "F14",
            GLFW.GLFW_KEY_F15,                 "F15",
            //GLFW.GLFW_KEY_KANA,                "KANA",
            //GLFW.GLFW_KEY_CONVERT,             "CONVERT",
            //GLFW.GLFW_KEY_NOCONVERT,           "NOCONVERT",
            //GLFW.GLFW_KEY_YEN,                 "YEN",
            //GLFW.GLFW_KEY_NUMPADEQUALS,        "NUMPADEQUALS",
            //GLFW.GLFW_KEY_CIRCUMFLEX,          "CIRCUMFLEX",
            //GLFW.GLFW_KEY_AT,                  "AT",
            //GLFW.GLFW_KEY_COLON,               "COLON",
            //GLFW.GLFW_KEY_UNDERLINE,           "UNDERLINE",
            //GLFW.GLFW_KEY_KANJI,               "KANJI",
            //GLFW.GLFW_KEY_STOP,                "STOP",
            //GLFW.GLFW_KEY_AX,                  "AX",
            //GLFW.GLFW_KEY_UNLABELED,           "UNLABELED",
            //GLFW.GLFW_KEY_NUMPADENTER,         "NUMPADENTER",
            //GLFW.GLFW_KEY_RCONTROL,            "RCONTROL",
            //GLFW.GLFW_KEY_NUMPADCOMMA,         "NUMPADCOMMA",
            //GLFW.GLFW_KEY_DIVIDE,              "DIVIDE",
            //GLFW.GLFW_KEY_SYSRQ,               "SYSRQ",
            //GLFW.GLFW_KEY_RMENU,               "RMENU",
            GLFW.GLFW_KEY_PAUSE,               "PAUSE",
            GLFW.GLFW_KEY_HOME,                "HOME",
            GLFW.GLFW_KEY_UP,                  "UP",
            //GLFW.GLFW_KEY_PRIOR,               "PRIOR",
            GLFW.GLFW_KEY_LEFT,                "LEFT",
            GLFW.GLFW_KEY_RIGHT,               "RIGHT",
            GLFW.GLFW_KEY_END,                 "END",
            GLFW.GLFW_KEY_DOWN,                "DOWN",
            //GLFW.GLFW_KEY_NEXT,                "NEXT",
            GLFW.GLFW_KEY_INSERT,              "INSERT",
            GLFW.GLFW_KEY_DELETE,              "DELETE"
            //GLFW.GLFW_KEY_LMETA,               "LMETA"
    );
}
